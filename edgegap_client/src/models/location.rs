/*
 * Codema
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@edgegap.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Location {
    /// City Name
    #[serde(rename = "city")]
    pub city: String,
    /// Continent Name
    #[serde(rename = "continent")]
    pub continent: String,
    /// Country name
    #[serde(rename = "country")]
    pub country: String,
    /// Timezone name
    #[serde(rename = "timezone")]
    pub timezone: String,
    /// Administrative Division
    #[serde(rename = "administrative_division")]
    pub administrative_division: String,
    /// The Latitude in decimal
    #[serde(rename = "latitude")]
    pub latitude: f32,
    /// The Longitude in decimal
    #[serde(rename = "longitude")]
    pub longitude: f32,
    /// The type of location
    #[serde(rename = "type")]
    pub _type: String,
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<crate::models::Tag>>,
}

impl Location {
    pub fn new(city: String, continent: String, country: String, timezone: String, administrative_division: String, latitude: f32, longitude: f32, _type: String) -> Location {
        Location {
            city,
            continent,
            country,
            timezone,
            administrative_division,
            latitude,
            longitude,
            _type,
            tags: None,
        }
    }
}


