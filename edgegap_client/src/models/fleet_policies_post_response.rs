/*
 * Codema
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@edgegap.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct FleetPoliciesPostResponse {
    /// Name of the Policy
    #[serde(rename = "name")]
    pub name: String,
    /// If the Policy is enabled. Defaults to true.
    #[serde(rename = "enabled")]
    pub enabled: bool,
    /// Type of the Policy. See our documentation for more information on the type and it's data.
    #[serde(rename = "type")]
    pub _type: Type,
    /// Minimum deployments at all time
    #[serde(rename = "minimum")]
    pub minimum: i32,
    /// Maximum deployments for the provided type.
    #[serde(rename = "maximum")]
    pub maximum: i32,
    /// Based on the number of sockets connected, how filled should a session deployment be before initiating a scale-up deployment. Float between 0.1 and 1.
    #[serde(rename = "threshold")]
    pub threshold: f32,
    /// JSON object for your filters. See our documentation for more information.
    #[serde(rename = "data")]
    pub data: serde_json::Value,
    /// UTC time of policy creation
    #[serde(rename = "create_time", skip_serializing_if = "Option::is_none")]
    pub create_time: Option<String>,
    /// UTC time of policy last update
    #[serde(rename = "last_updated", skip_serializing_if = "Option::is_none")]
    pub last_updated: Option<String>,
}

impl FleetPoliciesPostResponse {
    pub fn new(name: String, enabled: bool, _type: Type, minimum: i32, maximum: i32, threshold: f32, data: serde_json::Value) -> FleetPoliciesPostResponse {
        FleetPoliciesPostResponse {
            name,
            enabled,
            _type,
            minimum,
            maximum,
            threshold,
            data,
            create_time: None,
            last_updated: None,
        }
    }
}

/// Type of the Policy. See our documentation for more information on the type and it's data.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "Location")]
    Location,
    #[serde(rename = "Tag")]
    Tag,
    #[serde(rename = "Coordinates")]
    Coordinates,
}

