/*
 * Codema
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@edgegap.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct AppVersionPort {
    /// The Port to Expose your service. Port 0 reserved for one-to-one port mapping. See our doc for more information.
    #[serde(rename = "port")]
    pub port: i32,
    /// Available protocols: TCP, UDP, TCP/UDP, HTTP, HTTPS, WS or WSS
    #[serde(rename = "protocol")]
    pub protocol: String,
    /// If the port must be verified by our port validations
    #[serde(rename = "to_check", skip_serializing_if = "Option::is_none")]
    pub to_check: Option<bool>,
    /// Enabling with HTTP or WS will inject a sidecar proxy that upgrades the connection with TLS
    #[serde(rename = "tls_upgrade", skip_serializing_if = "Option::is_none")]
    pub tls_upgrade: Option<bool>,
    /// An optional name for the port for easier handling. Mandatory if using port 0
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
}

impl AppVersionPort {
    pub fn new(port: i32, protocol: String) -> AppVersionPort {
        AppVersionPort {
            port,
            protocol,
            to_check: None,
            tls_upgrade: None,
            name: None,
        }
    }
}


